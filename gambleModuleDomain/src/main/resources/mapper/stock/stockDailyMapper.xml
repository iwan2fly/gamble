<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.glog.domain.stock.mapper.StockDailyMapper">

    <insert id="insertStockDaily" parameterType="StockDaily" useGeneratedKeys="true" keyProperty="stockDailyId">
        INSERT INTO stockDaily
            ( stockCode, tradeDate, priceFinal, priceChange, priceStart, priceHigh, priceLow, volume, rateChange, volumeOrg, volumeForeigner, foreignerStockCount, foreignerHoldRate, insertTime, updateTime )
        VALUES
            ( #{stockCode}, #{tradeDate}, #{priceFinal}, #{priceChange}, #{priceStart}, #{priceHigh}, #{priceLow}, #{volume}, #{rateChange}, #{volumeOrg}, #{volumeForeigner}, #{foreignerStockCount}, #{foreignerHoldRate}, now(), now() )
    </insert>

    <insert id="insertsStockDaily" parameterType="java.util.ArrayList" useGeneratedKeys="true" keyColumn="stockDailyId" keyProperty="stockDailyId">
        INSERT INTO stock
            ( stockCode, tradeDate, priceFinal, priceChange, priceStart, priceHigh, priceLow, volume, rateChange, volumeOrg, volumeForeigner, foreignerStockCount, foreignerHoldRate, insertTime, updateTime )
        VALUES
        <foreach collection="list" item="item" index="index" separator="," open="" close="">
            ( #{item.stockCode}, #{item.tradeDate}, #{item.priceFinal}, #{item.priceChange}, #{item.priceStart}, #{item.priceHigh}, #{item.priceLow}, #{item.volume}, #{item.rateChange}, #{item.volumeOrg}, #{item.volumeForeigner}, #{item.foreignerStockCount}, #{item.foreignerHoldRate}, now(), now() )
        </foreach>
    </insert>

    <update id="updateStockDaily" parameterType="StockDaily">
        UPDATE 	stockDaily
        SET
        <trim prefix="" suffixOverrides=",">
            <if test="priceFinal != null">priceFinal = #{priceFinal},</if>
            <if test="priceChange != null">priceChange = #{priceChange},</if>
            <if test="priceStart != null">priceStart = #{priceStart},</if>
            <if test="priceHigh != null">priceHigh = #{priceHigh},</if>
            <if test="priceLow != null">priceLow = #{priceLow},</if>
            <if test="volume != null">volume = #{volume},</if>
            <if test="rateChange != null">rateChange = #{rateChange},</if>
            <if test="volumeOrg != null">volumeOrg = #{volumeOrg},</if>
            <if test="volumeForeigner != null">volumeForeigner = #{volumeForeigner},</if>
            <if test="foreignerStockCount != null">foreignerStockCount = #{foreignerStockCount},</if>
            <if test="foreignerHoldRate != null">foreignerHoldRate = #{foreignerHoldRate},</if>
            updateTime = now()
        </trim>
        WHERE stockDaily.stockCode=#{stockCode}
        AND stockDaily.tradeDate=#{tradeDate}
    </update>

    <delete id="deleteStockDaily" parameterType="StockDaily">
        DELETE FROM stockDaily
        WHERE 	stockDailyId=#{stockDailyId}
    </delete>

    <select id="selectStockDailyList" parameterType="StockDailyParam" resultType="StockDailyResult" >
        SELECT 	stockDaily.*
        FROM 	stockDaily
        <include refid="whereStockDaily" ></include>
        <include refid="orderStockDaily" ></include>
    </select>

    <select id="selectStockDailyListCount" parameterType="StockDailyParam" resultType="java.lang.Integer">
        SELECT 	COUNT(*)
        FROM   	stockDaily
        <include refid="whereStockDaily" ></include>
    </select>

    <sql id="whereStockDaily">
        <where>
            <trim prefixOverrides = "AND | OR">
                <if test="stockDailyId != null and stockDailyId != ''">AND stockDaily.stockDailyId=#{stockDailyId}</if>
                <if test="stockCode != null and stockCode != ''">AND stockDaily.stockCode=#{stockCode}</if>
                <if test="tradeDate != null and tradeDate != ''">AND stockDaily.tradeDate=#{tradeDate}</if>
                <if test="priceFinal != null and priceFinal != ''">AND stockDaily.priceFinal=#{priceFinal}</if>
                <if test="priceChange != null and priceChange != ''">AND stockDaily.priceChange=#{priceChange}</if>
                <if test="priceStart != null and priceStart != ''">AND stockDaily.priceStart=#{priceStart}</if>
                <if test="priceHigh != null and priceHigh != ''">AND stockDaily.priceHigh=#{priceHigh}</if>
                <if test="priceLow != null and priceLow != ''">AND stockDaily.priceLow=#{priceLow}</if>
                <if test="volume != null and volume != ''">AND stockDaily.volume=#{volume}</if>
                <if test="volumeOrg != null and volumeOrg != ''">AND stockDaily.volumeOrg=#{volumeOrg}</if>
                <if test="volumeForeigner != null and volumeForeigner != ''">AND stockDaily.volumeForeigner=#{volumeForeigner}</if>
                <if test="foreignerStockCount != null and foreignerStockCount != ''">AND stockDaily.foreignerStockCount=#{foreignerStockCount}</if>
                <if test="foreignerHoldRate != null and foreignerHoldRate != ''">AND stockDaily.foreignerHoldRate=#{foreignerHoldRate}</if>
                <if test="pagingParam.filter != null and pagingParam.filter != ''">AND stockDaily.dailyStockName like CONCAT('%',#{pagingParam.filter},'%')</if>
            </trim>
        </where>
    </sql>

    <sql id="orderStockDaily">
        <if test='pagingParam.sortIndex != null and pagingParam.sortIndex != ""'>ORDER BY
            <choose>
                <when test="pagingParam.sortIndex eq 'stockDailyId'">stockDailyId</when>
                <when test="pagingParam.sortIndex eq 'stockCode'">stockCode</when>
                <when test="pagingParam.sortIndex eq 'tradeDate'">tradeDate</when>
                <when test="pagingParam.sortIndex eq 'priceFinal'">priceFinal</when>
                <when test="pagingParam.sortIndex eq 'priceChange'">priceChange</when>
                <when test="pagingParam.sortIndex eq 'priceStart'">priceStart</when>
                <when test="pagingParam.sortIndex eq 'priceHigh'">priceHigh</when>
                <when test="pagingParam.sortIndex eq 'priceLow'">priceLow</when>
                <when test="pagingParam.sortIndex eq 'volume'">volume</when>
                <when test="pagingParam.sortIndex eq 'volumeOrg'">volumeOrg</when>
                <when test="pagingParam.sortIndex eq 'volumeForeigner'">volumeForeigner</when>
                <when test="pagingParam.sortIndex eq 'foreignerStockCount'">foreignerStockCount</when>
                <when test="pagingParam.sortIndex eq 'foreignerHoldRate'">foreignerHoldRate</when>
                <otherwise>stockDailyId</otherwise>
            </choose>
            <choose>
                <when test="pagingParam.sortType != null and pagingParam.sortType.equalsIgnoreCase('desc')">DESC</when>
                <otherwise>ASC</otherwise>
            </choose>
        </if>
        <if test="pagingParam.rows gt 0">
            LIMIT #{pagingParam.startIndex}, #{pagingParam.endIndex}
        </if>
    </sql>
    
</mapper>