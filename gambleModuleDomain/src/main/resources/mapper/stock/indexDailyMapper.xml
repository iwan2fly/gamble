<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.glog.domain.stock.mapper.IndexDailyMapper">

    <insert id="insertIndexDaily" parameterType="IndexDaily" useGeneratedKeys="true" keyProperty="indexDailyId">
        INSERT INTO indexDaily
            ( marketTypeCode, tradeDate, priceFinal, priceChange, rateChange, volume, priceTotal, priceTotalPerson, priceTotalForeigner, priceTotalOrg, insertTime, updateTime )
        VALUES
            ( #{marketTypeCode}, #{tradeDate}, #{priceFinal}, #{priceChange}, #{rateChange}, #{volume}, #{priceTotal}, #{priceTotalPerson}, #{priceTotalForeigner}, #{priceTotalOrg}, now(), now() )
    </insert>

    <insert id="insertsIndexDaily" parameterType="java.util.ArrayList" useGeneratedKeys="true" keyColumn="indexDailyId" keyProperty="indexDailyId">
        INSERT INTO stock
            ( marketTypeCode, tradeDate, priceFinal, priceChange, rateChange, volume, priceTotal, priceTotalPerson, priceTotalForeigner, priceTotalOrg, insertTime, updateTime )
        VALUES
        <foreach collection="list" item="item" index="index" separator="," open="" close="">
            ( #{item.marketTypeCode}, #{item.tradeDate}, #{item.priceFinal}, #{item.priceChange}, #{item.rateChange}, #{item.volume}, #{item.priceTotal}, #{item.priceTotalPerson}, #{item.priceTotalForeigner}, #{item.priceTotalOrg}, now(), now() )
        </foreach>
    </insert>

    <update id="updateIndexDaily" parameterType="IndexDaily">
        UPDATE 	indexDaily
        SET
        <trim prefix="" suffixOverrides=",">
            <if test="priceFinal != null">priceFinal = #{priceFinal},</if>
            <if test="priceChange != null">priceChange = #{priceChange},</if>
            <if test="rateChange != null">rateChange = #{rateChange},</if>
            <if test="volume != null">volume = #{volume},</if>
            <if test="priceTotal != null">priceTotal = #{priceTotal},</if>
            <if test="priceTotalPerson != null">priceTotalPerson = #{priceTotalPerson},</if>
            <if test="priceTotalForeigner != null">priceTotalForeigner = #{priceTotalForeigner},</if>
            <if test="priceTotalOrg != null">priceTotalOrg = #{priceTotalOrg},</if>
            updateTime = now()
        </trim>
        WHERE indexDaily.marketTypeCode=#{marketTypeCode}
        AND indexDaily.tradeDate=#{tradeDate}
    </update>

    <delete id="deleteIndexDaily" parameterType="IndexDaily">
        DELETE FROM indexDaily
        WHERE 	indexDailyId=#{indexDailyId}
    </delete>

    <select id="selectIndexDailyList" parameterType="IndexDailyParam" resultType="IndexDailyResult" >
        SELECT 	indexDaily.*
        FROM 	indexDaily
        <include refid="whereIndexDaily" ></include>
        <include refid="orderIndexDaily" ></include>
    </select>

    <select id="selectIndexDailyListCount" parameterType="IndexDailyParam" resultType="java.lang.Integer">
        SELECT 	COUNT(*)
        FROM   	indexDaily
        <include refid="whereIndexDaily" ></include>
    </select>

    <sql id="whereIndexDaily">
        <where>
            <trim prefixOverrides = "AND | OR">
                <if test="indexDailyId != null and indexDailyId != ''">AND indexDaily.indexDailyId=#{indexDailyId}</if>
                <if test="marketTypeCode != null and marketTypeCode != ''">AND indexDaily.marketTypeCode=#{marketTypeCode}</if>
                <if test="tradeDate != null and tradeDate != ''">AND indexDaily.tradeDate=#{tradeDate}</if>
                <if test="priceFinal != null and priceFinal != ''">AND indexDaily.priceFinal=#{priceFinal}</if>
                <if test="priceChange != null and priceChange != ''">AND indexDaily.priceChange=#{priceChange}</if>
                <if test="volume != null and volume != ''">AND indexDaily.volume=#{volume}</if>
                <if test="priceTotal != null and priceTotal != ''">AND indexDaily.priceTotal=#{priceTotal}</if>
                <if test="priceTotalPerson != null and priceTotalPerson != ''">AND indexDaily.priceTotalPerson=#{priceTotalPerson}</if>
                <if test="priceTotalForeigner != null and priceTotalForeigner != ''">AND indexDaily.priceTotalForeigner=#{priceTotalForeigner}</if>
                <if test="priceTotalOrg != null and priceTotalOrg != ''">AND indexDaily.priceTotalOrg=#{priceTotalOrg}</if>
            </trim>
        </where>
    </sql>

    <sql id="orderIndexDaily">
        <if test='pagingParam.sortIndex != null and pagingParam.sortIndex != ""'>ORDER BY
            <choose>
                <when test="pagingParam.sortIndex eq 'indexDailyId'">indexDailyId</when>
                <when test="pagingParam.sortIndex eq 'marketTypeCode'">marketTypeCode</when>
                <when test="pagingParam.sortIndex eq 'tradeDate'">tradeDate</when>
                <when test="pagingParam.sortIndex eq 'priceFinal'">priceFinal</when>
                <when test="pagingParam.sortIndex eq 'priceChange'">priceChange</when>
                <when test="pagingParam.sortIndex eq 'volume'">volume</when>
                <when test="pagingParam.sortIndex eq 'priceTotal'">priceTotal</when>
                <when test="pagingParam.sortIndex eq 'priceTotalPerson'">priceTotalPerson</when>
                <when test="pagingParam.sortIndex eq 'priceTotalForeigner'">priceTotalForeigner</when>
                <when test="pagingParam.sortIndex eq 'priceTotalOrg'">priceTotalOrg</when>
                <when test="pagingParam.sortIndex eq 'volumeOrg'">volumeOrg</when>
                <otherwise>indexDailyId</otherwise>
            </choose>
            <choose>
                <when test="pagingParam.sortType != null and pagingParam.sortType.equalsIgnoreCase('desc')">DESC</when>
                <otherwise>ASC</otherwise>
            </choose>
        </if>
        <if test="pagingParam.rows gt 0">
            LIMIT #{pagingParam.startIndex}, #{pagingParam.endIndex}
        </if>
    </sql>
    
</mapper>