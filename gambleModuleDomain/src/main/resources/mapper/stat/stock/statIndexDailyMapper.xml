<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.glog.domain.stat.stock.mapper.StatIndexDailyMapper">

    <insert id="insertStatIndexDaily" parameterType="StatIndexDaily" useGeneratedKeys="true" keyProperty="statStockDailyId">
        INSERT INTO statStockDaily
            (  marketCode, tradeDate, statNameCode, statDays, startDate, insertTime, updateTime )
        VALUES
            (  #{marketCode}, #{tradeDate}, #{statNameCode}, #{statDays}, #{startDate}, now(), now() )
    </insert>

    <insert id="insertsStatIndexDaily" parameterType="java.util.ArrayList" useGeneratedKeys="true" keyColumn="statStockDailyId" keyProperty="statStockDailyId">
        INSERT INTO statStockDaily
        (  marketCode, tradeDate, statNameCode, statDays, startDate, insertTime, updateTime )
        VALUES
        <foreach collection="list" item="item" index="index" separator="," open="" close="">
            (  #{item.marketCode}, #{item.tradeDate}, #{item.statNameCode}, #{item.statDays}, #{item.startDate}, now(), now() )
        </foreach>
    </insert>

    <update id="updateStatIndexDaily" parameterType="StatIndexDaily">
        UPDATE 	statStockDaily
        SET
        <trim prefix="" suffixOverrides=",">
            <if test="marketCode != null">marketCode = #{marketCode},</if>
            <if test="tradeDate != null">tradeDate = #{tradeDate},</if>
            <if test="statNameCode != null">statNameCode = #{statNameCode},</if>
            <if test="statDays != null">statDays = #{statDays},</if>
            <if test="startDate != null">startDate = #{startDate},</if>
            updateTime = now()
        </trim>
        WHERE statStockDaily.stockDailyId=#{stockDailyId}
    </update>

    <delete id="deleteStatIndexDaily" parameterType="StatIndexDaily">
        DELETE FROM statStockDaily
        WHERE 	statStockDailyId=#{statStockDailyId}
    </delete>

    <select id="selectStatIndexDailyList" parameterType="StatIndexDailyParam" resultType="StatIndexDailyResult" >
        SELECT 	statStockDaily.*
        FROM 	statStockDaily
        <include refid="whereStatIndexDaily" ></include>
        <include refid="orderStatIndexDaily" ></include>
    </select>

    <select id="selectStatIndexDailyListCount" parameterType="StatIndexDailyParam" resultType="java.lang.Integer">
        SELECT 	COUNT(*)
        FROM   	statStockDaily
        <include refid="whereStatIndexDaily" ></include>
    </select>

    <sql id="whereStatIndexDaily">
        <where>
            <trim prefixOverrides = "AND | OR">
                <if test="statStockDailyId != null and statStockDailyId != ''">AND statStockDaily.statStockDailyId=#{statStockDailyId}</if>
                <if test="marketCode != null and marketCode != ''">AND statStockDaily.marketCode=#{marketCode}</if>
                <if test="tradeDate != null and tradeDate != ''">AND statStockDaily.tradeDate=#{tradeDate}</if>
                <if test="statNameCode != null and statNameCode != ''">AND statStockDaily.statNameCode=#{statNameCode}</if>
                <if test="statDays != null and statDays != ''">AND statStockDaily.statDays=#{statDays}</if>
                <if test="startDate != null and startDate != ''">AND statStockDaily.startDate=#{startDate}</if>
                <if test="pagingParam.filter != null and pagingParam.filter != ''">AND statStockDaily.statNameCode like CONCAT('%',#{pagingParam.filter},'%')</if>
            </trim>
        </where>
    </sql>

    <sql id="orderStatIndexDaily">
        <if test='pagingParam.sortIndex != null and pagingParam.sortIndex != ""'>ORDER BY
            <choose>
                <when test="pagingParam.sortIndex eq 'statStockDailyId'">statStockDailyId</when>
                <when test="pagingParam.sortIndex eq 'marketCode'">marketCode</when>
                <when test="pagingParam.sortIndex eq 'tradeDate'">tradeDate</when>
                <when test="pagingParam.sortIndex eq 'statNameCode'">statNameCode</when>
                <when test="pagingParam.sortIndex eq 'statDays'">statDays</when>
                <when test="pagingParam.sortIndex eq 'startDate'">startDate</when>
                <otherwise>statStockDailyId</otherwise>
            </choose>
            <choose>
                <when test="pagingParam.sortType != null and pagingParam.sortType.equalsIgnoreCase('desc')">DESC</when>
                <otherwise>ASC</otherwise>
            </choose>
        </if>
        <if test="pagingParam.rows gt 0">
            LIMIT #{pagingParam.startIndex}, #{pagingParam.endIndex}
        </if>
    </sql>
    
</mapper>